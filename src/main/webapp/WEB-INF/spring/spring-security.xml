<beans:beans xmlns="http://www.springframework.org/schema/security"
		     xmlns:beans="http://www.springframework.org/schema/beans" 
		     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		     xmlns:jdbc="http://www.springframework.org/schema/jdbc" 
		     xmlns:context="http://www.springframework.org/schema/context"
		     xsi:schemaLocation="http://www.springframework.org/schema/beans
					             http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
					             http://www.springframework.org/schema/jdbc
					             http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
					             http://www.springframework.org/schema/security
					             http://www.springframework.org/schema/security/spring-security-3.0.xsd
					             http://www.springframework.org/schema/context 
					             http://www.springframework.org/schema/context/spring-context-3.0.xsd">
  
  	<beans:bean id="customAuthenticationProvider" class="com.springsecurity.auth.controller.CustomAuthenticationProvider" />
  
	<http use-expressions="true">
		<intercept-url pattern="/login.html" access="permitAll"/>
		<intercept-url pattern="/admin/**" access="hasAnyRole('Admin')"/>
		<intercept-url pattern="/merchant/**" access="hasAnyRole('Merchant','Passive Merchant')"/>
		<form-login login-page="/login" default-target-url="/home" always-use-default-target="true"/>
		<logout logout-url="/logout" logout-success-url="/login" invalidate-session="true"/>
	</http>
  	
  	<beans:bean id="daoAuthenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
  		<beans:property name="userDetailsService" ref="userDetailsService" />
  	</beans:bean>
  	
  	<beans:bean id="authenticationManager" class="org.springframework.security.authentication.ProviderManager">
  		<beans:property name="providers">
  			<beans:list>
  				<beans:ref local="daoAuthenticationProvider"/>
  			</beans:list>
  		</beans:property>
  	</beans:bean>
  	
  	<authentication-manager>
  		<authentication-provider ref="customAuthenticationProvider" user-service-ref="userDetailsService">
  			<password-encoder hash="plaintext" />
  		</authentication-provider> 
  	</authentication-manager>
  	
  	<beans:bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl" />
  	
</beans:beans>